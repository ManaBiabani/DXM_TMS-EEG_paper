% ##### PLOT COMPARISON OF RESTING EEG CHANGES WITH DRUGS #####

% This script plots topoplots showing changes in resting state power following
% dextromethorphan and placebo.
% Inputs are the grand average structure of the EEG FFT data generated by 
% FieldTrip, and output of cluster-based permutation tests (time x drug
% interaction).

% Author: Nigel Rogasch, Monash University

clear; close all; clc;

% Stimulation sites
state = {'open';'closed'}; % two different stimulation sites
con = {'C1';'C2'};

% Time variable
time = -1500:1:1499;

% Return which computer is running
currentComp = getenv('computername');

% Select path based on computer
if strcmp(currentComp,'CHEWBACCA')
    % Location of 'sound_final' file
    pathDef = 'I:\nmda_tms_eeg\';
else
    % Location of 'sound_final' file
    pathDef = 'D:\nmda_tms_eeg\';
end

% Load data 
addpath ('C:\Users\Nigel\Desktop\fieldtrip-20170815');
ft_defaults;

% Set paths
pathInData = [pathDef,'\REST_FFT_STATS\data\']; % Path in
pathInStats = [pathDef,'\REST_FFT_STATS\stats\']; % Path out

% Define frequencies of interest
freqName = {'delta';'theta';'alpha';'beta';'gamma'};
freqRange = {[1,3];[4,7];[8,12];[13,29];[30,45]};
freqNameCap = {'Delta';'Theta';'Alpha';'Beta';'Gamma'};


%% PLOT DATA

% Topoplots 
twidth = 0.12;
theight = 0.12;

% zlim for change scores
zr = [0.2,0.5,0.5,0.05,0.01];

fig = figure;

for statex = 1:length(state)
    
    % Load data
    C1 = load([pathInData,'C1_',state{statex},'_diff.mat']);
    C2 = load([pathInData,'C2_',state{statex},'_diff.mat']);
    meanData.C1 = squeeze(mean(C1.power.powspctrm,1));
    meanData.C2 = squeeze(mean(C2.power.powspctrm,1));
    labelIn = C1.power.label;
       
    txpos = linspace(0.07,(1-0.07-twidth),length(freqName));
    typos(:,1) = flip(linspace(0.5+0.05,(1-0.09-theight),3));
    typos(:,2) = flip(linspace(0.05,(0.5-0.09-theight),3));
    
    plotStruc = [];
    plotStruc.time = 1;
    plotStruc.dimord = 'chan';
    plotStruc.label = labelIn;
    
    ix = 4:length(freqName)*3+3;
    ix = reshape(ix,3,[]);
    
    for plotx = 1:length(freqName)
        
        % Load stats
        stat = load([pathInStats,'C1_',state{statex},'_diff_VS_','C2_',state{statex},'_diff_',freqName{plotx},'.mat']);
        
        % TOP PANEL PLOT (C1)
        posName = ['pos',num2str(ix(1,plotx))];
        pos.(posName) = [txpos(plotx),typos(1,statex),twidth,theight];
        subplot('position',pos.(posName));
        plotStruc.avg = mean(meanData.C1(:,freqRange{plotx}(1):freqRange{plotx}(2)),2);
        cfg = [];
        cfg.layout = 'easycapM11.mat';
        cfg.comment = 'no';
        cfg.interactive = 'no';
        cfg.markersymbol = '.';
        cfg.zlim = [-zr(plotx),zr(plotx)];
        ft_topoplotER(cfg,plotStruc);
        text(0,0.85,[freqNameCap{plotx}],'horizontalalignment','center','fontsize',12);
        if plotx == 1
            text(-1,0,'DXM','horizontalalignment','center','fontsize',12);
            if statex == 1
                text(-1,1.15,'A','horizontalalignment','center','fontsize',16);
            elseif statex == 2
                text(-1,1.15,'B','horizontalalignment','center','fontsize',16);
            end   
        end
%         if plotx == length(freqName)
            c = colorbar;
            tmpc = c.Position;
            c.Position = [tmpc(1)+0.06,tmpc(2)-0.11,tmpc(3),0.09];
            c.LineWidth = 1.5;
            c.Ticks = [-zr(plotx);0;zr(plotx)];
            title(c,'\Delta pow.');
%         end
        
        % MIDDLE PANEL PLOT (C2)
        posName = ['pos',num2str(ix(2,plotx))];
        pos.(posName) = [txpos(plotx),typos(2,statex),twidth,theight];
        subplot('position',pos.(posName))
        plotStruc.avg = mean(meanData.C2(:,freqRange{plotx}(1):freqRange{plotx}(2)),2);
        cfg = [];
        cfg.layout = 'easycapM11.mat';
        cfg.comment = 'no';
        cfg.interactive = 'no';
        cfg.zlim = [-zr(plotx),zr(plotx)];
        cfg.markersymbol = '.';
        ft_topoplotER(cfg,plotStruc);
        if plotx == 1
            text(-1,0,'PBO','horizontalalignment','center','fontsize',12);
        end
%         if plotx == length(freqName);
%             c = colorbar;
%             tmpc = c.Position;
%             c.Position = [tmpc(1)+0.06,tmpc(2)-0.04,tmpc(3),0.09];
%             c.LineWidth = 1.5;
%             c.Ticks = [-zr(plotx);0;zr(plotx)];
%             title(c,'\Delta\muV');
%         end
        
        % BOTTOM PANEL PLOT (STAT)
               
        posName = ['pos',num2str(ix(3,plotx))];
        pos.(posName) = [txpos(plotx),typos(3,statex),twidth,theight];
        sp = subplot('position',pos.(posName));
        
        cfg = [];
        cfg.layout = 'easycapM11.mat';
        cfg.comment = 'no';
        cfg.interactive = 'no';
%         cfg.marker = 'off';
        cfg.markersymbol = '.';
        cfg.zlim = [-3,3];
        
        stat = stat.stat;
        
%         [~,tpStat] = min(abs(stat.time*1000-tTime(plotx)));
        plotStruc.avg = stat.stat;
        
        if isfield(stat,'posclusters')
            if ~isempty(stat.posclusters)
                if stat.posclusters(1).prob < 0.01
                    cfg.highlight = 'on';
                    cfg.highlightchannel   =  stat.label(stat.posclusterslabelmat==1);
                    cfg.highlightsymbol    = '.';
                    cfg.highlightsize = 16;
                    cfg.highlightcolor   = [0 0 0];
                end
            end
        end
        if isfield(stat,'negclusters')
            if ~isempty(stat.negclusters)
                if stat.negclusters(1).prob < 0.01
                    
                    if isfield(cfg,'highlightchannel')
                        if ~isempty(cfg.highlightchannel)
                            cfg.highlight = {'on','on'};
                            cfg.highlightchannel   =  {cfg.highlightchannel,stat.label(stat.negclusterslabelmat==1)};
                            cfg.highlightsymbol    = {'.','.'};
                            cfg.highlightsize = 16;
                            cfg.highlightcolor   = {[0 0 0],[0.99 0.99 0.99]};
                        end
                    else
                        cfg.highlight = 'on';
                        cfg.highlightchannel   =  stat.label(stat.negclusterslabelmat==1);
                        cfg.highlightsymbol    = '.';
                        cfg.highlightsize = 16;
                        cfg.highlightcolor   = [ 0.99 0.99 0.99];
                    end
                    
                elseif stat.negclusters(1).prob < 0.05 && stat.negclusters(1).prob > 0.01
                    if isfield(cfg,'highlightchannel')
                        if ~isempty(cfg.highlightchannel)
                            cfg.highlight = {'on','on'};
                            cfg.highlightchannel   =  {cfg.highlightchannel,stat.label(stat.negclusterslabelmat==1)};
                            cfg.highlightsymbol    = {'.','.'};
                            cfg.highlightsize = 16;
                            cfg.highlightcolor   = {[0 0 0],[65/255 105/255 255/255-0.01]};
                        end
                    else
                        cfg.highlight = 'on';
                        cfg.highlightchannel   =  stat.label(stat.negclusterslabelmat==1);
                        cfg.highlightsymbol    = '.';
                        cfg.highlightsize = 16;
                        cfg.highlightcolor   = [65/255 105/255 255/255-0.01];
                    end
                end
            end
        end
        
        figStat = ft_topoplotER(cfg,plotStruc);
        sp.Position = pos.(posName);
        
        colormap(gca,'hot');
        if plotx == 1
            text(-1,0,'Stat','horizontalalignment','center','fontsize',12);
        end
%         if plotx == length(freqRange)
            c = colorbar;
            tmpc = c.Position;
            c.Position = [tmpc(1)+0.06,tmpc(2)-0.04,tmpc(3),0.09];
            c.LineWidth = 1.5;
            c.Ticks = [-3;0;3];
            title(c,'t');
%         end
    end
    
end

annotation('textbox', [0 0.89 1 0.1], ...
    'String', 'Eyes open', ...
    'EdgeColor', 'none', ...
    'HorizontalAlignment', 'center',...
    'FontSize',14)

annotation('textbox', [0 0.39 1 0.1], ...
    'String', 'Eyes closed', ...
    'EdgeColor', 'none', ...
    'HorizontalAlignment', 'center',...
    'FontSize',14)

set(fig,'position', [200 300 1000 800]);

pathOut = 'H:\My Drive\Science\Manuscripts\0000_Rogasch_TMS-EEG and dextromethorphan\figures\';
savename = [pathOut,'rest_drug_comparison'];
set(gcf,'PaperPositionMode','auto');
print(fig,'-dsvg',savename);
print(fig,'-dpng',savename);